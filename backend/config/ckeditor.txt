// # Colors
const colors = [
  { color: '#000000', label: 'Black' },
  { color: '#FFFFFF', label: 'White' },
  { color: '#295991', label: 'Blue Medium' },
  { color: '#255185', label: 'Blue Light' },
  { color: '#224A78', label: 'Blue Dark' }
]

// # Font Family
const fontFamilyOptions = [
  {
    title: 'deafult',
    className: 'font-galano' // Tailwind ClassName
  },
  {
    title: 'roboto',
    className: 'font-roboto' // Tailwind ClassName
  },
]

// Font Sizes
const fontSizeOptions = [
  {
    title: 'Base',
    className: "text-base" // Tailwind ClassName
  },
  {
    title: '12',
    className: "text-xs" // Tailwind ClassName
  },
  {
    title: '14',
    className: "text-sm" // Tailwind ClassName
  },
  {
    title: '18',
    className: "text-lg" // Tailwind ClassName
  },
  {
    title: '20',
    className: "text-xl" // Tailwind ClassName
  },
]


const styles = `
  .ck .text-base {
    font-size: 16px;
    line-height: 1.333;
  }
  .ck .text-xs {
    font-size: 12px;
    line-height: 1.333;
  }
  .ck .text-sm {
    font-size: 14px;
    line-height: 1.333;
  }
  .ck .text-lg {
    font-size: 18px;
    line-height: 1.333;
  }
  .ck .text-xl {
    font-size: 20px;
    line-height: 1.333;
  }
`

// Create more complex fontsize object
const fontFamily = {
  options: fontFamilyOptions.map(option => ({
    title: option.title,
    model: option.title,
    view: {
      name: 'span',
      classes: [option.className]
    }
  }))
}

// Create more complex fontsize object
const fontSize = {
  options: fontSizeOptions.map(option => ({
    title: option.title,
    model: option.title,
    view: {
      name: 'span',
      classes: [option.className]
    }
  }))
}


// Full text editor
const baseEditor = {
  field: {
    key: "baseEditor",
    value: "baseEditor",
    metadatas: {
      intlLabel: {
        id: "ckeditor5.preset.custom.label",
        defaultMessage: "Base Editor",
      },
    },
  },
  styles,
  editorConfig:{
    fontColor: {
      colors
    },
    fontSize,
    fontFamily,
    plugins: [
      CKEditor5.autoformat.Autoformat,
      CKEditor5.basicStyles.Bold,
      CKEditor5.basicStyles.Italic,
      CKEditor5.basicStyles.Underline,
      CKEditor5.essentials.Essentials,
      CKEditor5.heading.Heading,
      CKEditor5.indent.Indent,
      CKEditor5.link.Link,
      CKEditor5.list.List,
      CKEditor5.paragraph.Paragraph,
      CKEditor5.fontWithPicker.FontFamily,
      CKEditor5.fontWithPicker.FontSize,
      window.CKEditor5.fontWithPicker.FontColor,
      CKEditor5.sourceEditing.SourceEditing,
    ],
    link: {
      addTargetToExternalLinks: true
    },
    toolbar: [
      'heading',
      '|',
      'bold', 'italic', 'underline',
      '|',
      'fontColor',
      'FontFamily',
      'FontSize',
      '|',
      'link',
      '|',
      'bulletedList', 'numberedList',
      'sourceEditing',
    ],
    heading: {
      options: [
        { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
        { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
        { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
        { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
      ]
    },
  }
}

// Custom Editor
const customEditor = {
  field: {
    key: "customEditor",
    value: "customEditor",
    metadatas: {
      intlLabel: {
        id: "ckeditor5.preset.custom.label",
        defaultMessage: "Custom Editor",
      },
    },
  },
  styles,
  editorConfig:{
    fontColor: {
      colors
    },
    fontSize,
    fontFamily,
    plugins: [
      CKEditor5.autoformat.Autoformat,
      CKEditor5.heading.Heading,
      CKEditor5.paragraph.Paragraph,
      CKEditor5.fontWithPicker.FontFamily,
      CKEditor5.fontWithPicker.FontSize,
      window.CKEditor5.fontWithPicker.FontColor
    ],
    toolbar: [
      'heading',
      '|',
      'FontFamily',
      'FontSize',
      'fontColor',
    ],
    heading: {
      options: [
        { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
        { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
        { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
        { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
      ]
    },
  }
}

globalThis.CKEditorConfig = {
  // Editors
  configs: {
    baseEditor,
    customEditor
  },
  theme: {
    dark: '',
    light: ''
  }
}
